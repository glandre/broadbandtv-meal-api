{
  "name": "Broadbandtv-meal-api",
  "tagline": "BroadBandTV Meal Nutrition API",
  "body": "### Welcome Our Meal Nutrition API implementation\r\n\r\n- Contributors:\r\n* Bruno Henrique\r\n* Geraldo B. Landre\r\n* Renan Rossini\r\n* Rodrigo G. Batistella\r\n\r\n#Instructions\r\n\r\n##Information\r\n- BroadbandTV-Meal-API\r\n- RESTfull JSON API\r\n- Version 1.0.0.0\r\n\r\n##Requirements\r\n- PHP5.6 or higher\r\n- Composer\r\n- SQL Database (MySQL is preferred, but you can use any PDO's possibility)\r\n\r\n> Important: For the above tutorial, we are going to use MySQL Database.\r\n\r\n> Important: Be sure to create a new database before iniciate installation process\r\n\r\n##How to Install\r\nDownload the zip file and unzip it in your local machine.\r\n\r\n###Windows\r\nAfter unziping the content file, open command prompt</b>\r\n\r\nAccess the API's source code directory\r\n```\r\ncd broadbandtv-meal-api-master\r\n```\r\n\r\nRun composer to install and update all necessary depencencies (it may take some time, so be patient..)\r\n```\r\ncomposer update\r\n```\r\n\r\nNow, that you have everything you need to run this API, you must configure it.\r\n```\r\ncopy .env.example .env\r\n```\r\n\r\nYou also have to generate a valid app key. The following command will do this to you:\r\n```\r\nphp artisan key:generate\r\n```\r\n\r\nUsing any text editor of your preference, edit file **/broadbandtv-meal-api-master/.env** according to your environment.\r\n\r\nClose your text editor and go back to command prompt. At this point your application is well configured, but you need a few important information inside your database.\r\n```\r\nphp artisan migrate --seed\r\n```\r\n\r\nExcellent! It's all done. Now you can use your Web Server Application to run this API.\r\n\r\nYou don't have any Web Server in your machine? No problem. Make sure you are inside **/broadbandtv-meal-api-master** directory and, using your command prompt, run the following command:\r\n```\r\nphp artisan serve\r\n```\r\n\r\n###Linux\r\nExecute the following steps using a terminal</b>\r\n\r\nGo to the directory you have downloaded API's zip file and unzip it\r\n```\r\nunzip broadbandtv-meal-api-master.zip\r\n```\r\n\r\nAfter unziping the content file, access the API's source code directory\r\n```\r\ncd broadbandtv-meal-api-master\r\n```\r\n\r\nRun composer to install and update all necessary depencencies (it may take some time, so be patient..)\r\n```\r\ncomposer update\r\n```\r\n\r\nNow, that you have everything you need to run this API, you must configure it.\r\n```\r\ncp .env.example .env\r\n```\r\n\r\nYou also have to generate a valid app key. The following command will do this to you:\r\n```\r\nphp artisan key:generate\r\n```\r\n\r\nUsing any text editor of your preference, edit file **/broadbandtv-meal-api-master/.env** according to your environment.\r\n\r\nClose your text editor and go back to command prompt. At this point your application is well configured, but you need a few important information inside your database.\r\n```\r\nphp artisan migrate --seed\r\n```\r\n\r\nExcellent! It's all done. Now you can use your Web Server Application to run this API.\r\n\r\nYou don't have any Web Server in your machine? No problem. Make sure you are inside **/broadbandtv-meal-api-master** directory and run the following command:\r\n```\r\nphp artisan serve\r\n```\r\n\r\n##Available API Routes\r\n\r\n> Important: Change http://domain:port with your domain and port. (eg: http://localhost:8000)\r\n\r\n###Recipe\r\n\r\n####Saving a new recipe\r\n- Address: http://domain:port/api/meal/recipe\r\n- Method: POST\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n```php\r\n{\"recipe\": {\r\n   \"name\" : \"My test recipe\",\r\n   \"difficulty\" : \"easy\",\r\n   \"user_id\" : 3,\r\n   \"comments\" : \"just a test recipe\",\r\n   \"foods\" : [\r\n       { \r\n           \"ndbno\" : \"43205\",\r\n           \"name\" : \"I don´t know\",\r\n           \"measure\" :\"tbsp\",\r\n           \"qty\" :\"4.87\"\r\n       },\r\n       { \r\n           \"ndbno\" : \"05070\",\r\n           \"name\" : \"I don´t know too\",\r\n           \"measure\" :\"cup, chopped or diced\",\r\n           \"qty\" :\"2\"\r\n       }\r\n   ],\r\n   \"steps\" : [\r\n       {\r\n           \"number\" : \"1\",\r\n           \"description\" : \"mix them\",\r\n           \"time\" : \"00:01\"\r\n       },\r\n       {\r\n           \"number\" : \"2\",\r\n           \"description\" : \"eat\",\r\n           \"time\" : \"00:01\"\r\n       }\r\n   ],\r\n   \"tags\" : [\r\n       {\r\n           \"tag\" : \"just a a tag\"\r\n       },\r\n       {\r\n           \"tag\" : \"another tag\"\r\n       }\r\n   ]\r\n}}\r\n```\r\n\r\n####Editing a saved recipe\r\n- Address: http://domain:port/api/meal/recipe/\\<recipe_id\\>\r\n- Method: PUT\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n```php\r\n{\r\n\"name\" : \"Complete Recipe with One Food1234\",\r\n\"user_id\" : 3,\r\n\"difficulty\" : \"medium\",\r\n\"comments\" : \"piece of cake\",\r\n\"foods\" : [\r\n{\r\n\"ndbno\" : \"01009\",\r\n\"qty\" : 1,\r\n\"measure\" : \"cup, diced\",\r\n\"name\" : \"Optional name\"\r\n},\r\n{\r\n\"ndbno\" : \"01005\",\r\n\"qty\" : 2,\r\n\"measure\" : \"cup, diced\"\r\n}\r\n]\r\n}\r\n```\r\n\r\n####Deleting a saved recipe\r\n- Address: http://domain:port/api/meal/recipe/\\<recipe_id\\>\r\n- Method: DELETE\r\n- Return: JSON\r\n\r\n####Retrieving a saved recipe\r\n- Address: http://domain:port/api/meal/recipe/\\<recipe_id\\>\r\n- Method: GET\r\n- Return: JSON\r\n\r\n####Retrieving all recipes from a user\r\n- Address: http://domain:port/api/meal/user-recipes/\\<user_id\\>\r\n- Method: GET\r\n- Return: JSON\r\n\r\n___\r\n\r\n###User\r\n\r\n####Saving a new user\r\n- Address: http://domain:port/api/meal/user\r\n- Method: POST\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n```php\r\n{\r\n\"name\" : \"new_user_name\",\r\n\"password\" : \"1234123412341234\"\r\n}\r\n```\r\n\r\n####Editing a saved user\r\n- Address: http://domain:port/api/meal/user/\\<user_id\\>\r\n- Method: PUT\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n```php\r\n{\r\n\"name\" : \"new_name_for_an_old_user\",\r\n\"password\" : \"newpassword\"\r\n}\r\n```\r\n\r\n####Deleting a saved user\r\n- Address: http://domain:port/api/meal/user/\\<user_id\\>\r\n- Method: DELETE\r\n- Return: JSON\r\n\r\n####Retrieving a saved user\r\n- Address: http://domain:port/api/meal/user/\\<user_id\\>\r\n- Method: GET\r\n- Return: JSON\r\n\r\n####Retrieving all saved users\r\n- Address: http://domain:port/api/meal/user/\r\n- Method: GET\r\n- Return: JSON\r\n\r\n___\r\n\r\n###Food Search\r\n\r\n####Retrieving a food name and its measures by its NDBNO\r\n- Address: http://domain:port/api/meal/food-ndbno/\\<food_id\\>\r\n- Method: GET\r\n- Return: JSON\r\n\r\n####Retrieving a list of foods by its name\r\n- Address: http://domain:port/api/meal/food-name/\\<food_name\\>\r\n- Method: GET\r\n- Return: JSON\r\n\r\n___\r\n\r\n###Calculating Nutritional Information\r\n\r\n####Retrieving nutritional information of a list of foods\r\n- Address: http://domain:port/api/meal/nutritional-information/\r\n- Method: POST\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n```php\r\n{\r\n  \"recipe\": {\r\n       \"name\": \"My new recipe\",\r\n       \"foods\": [\r\n            {\r\n                 \"ndbno\": \"43205\",\r\n                 \"qty\": \"4.87\",\r\n                 \"measure\": \"tbsp\"\r\n            },\r\n            {\r\n                 \"ndbno\": \"05070\",\r\n                 \"qty\": \"1\",\r\n                 \"measure\": \"cup, chopped or diced\"\r\n            }\r\n       ]\r\n    }\r\n}\r\n```\r\n\r\n####Retrieving a recipe nutritional information\r\n- Address: http://domain:port/api/meal/nutritional-information/\\<recipe_id\\>\r\n- Method: GET\r\n- Return: JSON\r\n- Post Content: Content-Type = application/json\r\n\r\n\r\n##Error Handling\r\n\r\n###Enabling/Disabling Stack Trace Messages\r\nAll database errors or application dumps are returned in the JSON response. If the APP_DEBUG environment configuration in ,env is set as false the stack trace is not returned, if set to true it is returned\r\n\r\n###Default Error Response\r\nWhen a method finds an error during execution, it will return an Error Response.\r\n- success = [true|false]\r\n- general_message = returns a string showing the error description\r\n- errors = can show one or alist of errors\r\n\r\n```json\r\n{\r\n    success:false,\r\n    general_message:\"You have reached your max number of Foos for the day\",\r\n    errors: {\r\n        last_name:\"This field is required\",\r\n        mrn:\"Either SSN or MRN must be entered\",\r\n        zipcode:\"996852 is not in Bernalillo county. Only Bernalillo residents are eligible\"\r\n    }\r\n} \r\n```\r\n##Troubleshooting\r\n###$HTTP_RAW_POST_DATA\r\nDepending on the PHP version, it could happen during POST requests.\r\n\r\n- Error message:\r\n\r\n> Automatically populating $HTTP_RAW_POST_DATA is deprecated and will be removed in a future version. To avoid this warning set ‘always_populate_raw_post_data’ to ‘-1’ in php.ini and use the php://input stream instead. in Unknown on line 0\r\n\r\n- How to solve it:\r\nConfigure your php.ini file as follows:\r\n```\r\n; Always populate the $HTTP_RAW_POST_DATA variable. PHP's default behavior is\r\n; to disable this feature and it will be removed in a future version.\r\n; If post reading is disabled through enable_post_data_reading,\r\n; $HTTP_RAW_POST_DATA is *NOT* populated.\r\n; http://php.net/always-populate-raw-post-data\r\nalways_populate_raw_post_data = -1\r\n```\r\n\r\n##Technical Documentation\r\nThere is also a technical documentation [here](https://github.com/glandre/broadbandtv-meal-api/tree/master/api).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}